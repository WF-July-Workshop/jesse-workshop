# Configuration of the router's HTTP server
# Default configuration for container
supergraph:
  # The socket address and port to listen on
  listen: 0.0.0.0:${env.PORT:-4000}
  introspection: true

# Enable entity caching globally
preview_entity_cache:
  enabled: true

  # Configure Redis
  redis:
    urls: ["redis://verysecret@34.75.85.172:6379?db=0"]
    timeout: 5ms # Optional, by default: 2ms
    ttl: 24h # Optional, by default no expiration


# For demo purposes - can remove or enable homepage
sandbox:
  enabled: true
homepage:
  enabled: false

telemetry:
  apollo:
    # Send all traces via OTLP
    experimental_otlp_tracing_sampler: always_on

  exporters:
    tracing:
      common:
        sampler: 1.0
cors:
  origins:
    - https://studio.apollographql.com
  allow_credentials: true

# This would make debugging easier, but should be a per subgraph basis for production
include_subgraph_errors:
  all: true # Propagate errors from all subgraphs

subscription:
  mode:
    passthrough:
       # docker setup, for local setup comment out the following section
       subgraphs:
        products:
         path: /

## Enter Workshop Module Configs Below

## Authentication and Authorization Module
authentication:
  router:
    jwt:
      header_name: Authorization
      header_value_prefix: Bearer
      jwks:
        - url: https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com

authorization:
  require_authentication: false
  preview_directives: 
    enabled: true

limits:
  max_depth: 5
  max_height: 10
  max_aliases: 3

coprocessor:
  url: https://coprocessor-wn3vwa6nlq-ue.a.run.app 
  timeout: 2s 
  router:
    response:
      body: true

